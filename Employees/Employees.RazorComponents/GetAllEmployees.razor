@using Employees.Contracts.EmployeeContracts
@using System.Net.Http.Json

@inject NavigationManager nav
@inject HttpClient httpClient

@if (!IsPressed)
{
    <button @onclick=LoadEmployees>Load Employees</button>
    <p>@errorMessage</p>
}
else
{
    <div>
        <table>
            <thead>
                <tr>
                    <th>First Name</th>

                    <th>Last Name</th>

                    <th>Email</th>

                    <th>Age</th>

                    <th>Date of Birth</th>

                    <th>Nationality</th>

                    <th>Gender</th>

                    <th>Phone Number</th>
                </tr>
            </thead>
            <tbody>
                @foreach(ResponseEmployee.Get employee in list)
                {
                    <tr>
                        <td>@employee.FirstName</td>
                        <td>@employee.LastName</td>
                        <td>@employee.Email</td>
                        <td>@employee.Age</td>
                        <td>@employee.DateOfBirth.ToString("dd-MM-yyyy")</td>
                        <td>@employee.Gender</td>
                        <td>@employee.Nationality</td>
                        <td>@employee.PhoneNumber</td>
                        <td><a href="employees/@employee.Id/details">Details</a></td>
                    </tr>
                }
            </tbody>
        </table>

        <button @onclick=LoadEmployees>Close Tag</button>
    </div>
}

@code
{
    private bool IsPressed = false;

    private string errorMessage = string.Empty;

    List<ResponseEmployee.Get> list = new List<ResponseEmployee.Get>();

    private async Task LoadEmployees()
    {
        if (!IsPressed)
        {
            @* await foreach (ResponseEmployee.Get employee in services.GetAllAsync())
            {
                list.Add(employee);
            }

            IsPressed = true; *@

            list = await httpClient.GetFromJsonAsync<List<ResponseEmployee.Get>>($"{nav.BaseUri}employees/getallemployees") ?? new List<ResponseEmployee.Get>();

            if(list.Count == 0)
            {
                errorMessage = "The list is empty";

                return;
            }

            IsPressed = true;

            return;
        }
        else
        {
            list.Clear();

            errorMessage = string.Empty;

            IsPressed = false;

            return;
        }
    }
}