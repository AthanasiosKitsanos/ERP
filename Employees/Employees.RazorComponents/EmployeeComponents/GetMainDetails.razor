@using Employees.Contracts.EmployeeContracts
@using Employees.Shared.CustomEndpoints
@using Employees.Domain
@using System.Net.Http.Json

@inject NavigationManager nav
@inject HttpClient http


@if(employee is not null)
{
    switch(Mode)
    {
        case FormMode.View:
        <table>
            <tbody>
                <tr>
                    <td><b>First Name:</b></td>
                    <td>@employee.FirstName</td>
                </tr>

                <tr>
                    <td><b>Last Name:</b></td>
                    <td>@employee.LastName</td>
                </tr>

                <tr>
                    <td><b>Email:</b></td>
                    <td>@employee.Email</td>
                </tr>

                <tr>
                    <td><b>Age:</b></td>
                    <td>@employee.Age</td>
                </tr>

                <tr>
                    <td><b>Date Of Birth:</b></td>
                    <td>@employee.DateOfBirth.ToString("dd-MM-yyyy")</td>
                </tr>

                <tr>
                    <td><b>Nationality:</b></td>
                    <td>@employee.Nationality</td>
                </tr>

                <tr>
                    <td><b>Gender:</b></td>
                    <td>@employee.Gender</td>
                </tr>

                <tr>
                    <td><b>Phone Number:</b></td>
                    <td>@employee.PhoneNumber</td>
                </tr>

            
                <tr>
                    <td><a @onclick=EditForm>Edit</a></td>
                </tr>
            </tbody>
        </table>
        break;

        case FormMode.Update:
            
        <form method="post" action="@Endpoints.Employees.Update.Replace("{id}", Id.ToString())">
            <input type="hidden" name="__RequestVerificationToken" value="@AntiForgery">

            <table>
                <tbody>
                    <tr>
                        <td><b>First Name:</b></td>
                        <td>@employee!.FirstName</td>
                    </tr>

                    <tr>
                        <td><b>Last Name:</b></td>
                        <td>@employee.LastName</td>
                    </tr>

                    <tr>
                        <td><b>Email:</b></td>
                        <td>
                            <input name="Email" @bind="update.Email">
                        </td>
                    </tr>

                    <tr>
                        <td><b>Age:</b></td>
                        <td>@employee.Age</td>
                    </tr>

                    <tr>
                        <td><b>Date Of Birth:</b></td>
                        <td>@employee.DateOfBirth.ToString("dd-MM-yyyy")</td>
                    </tr>

                        <tr>
                        <td><b>Nationality:</b></td>
                        <td>
                            <input type="text" name="Nationality" @bind="update.Nationality">
                        </td>
                    </tr>

                    <tr>
                        <td><b>Gender:</b></td>
                        <td>@employee.Gender</td>
                    </tr>

                    <tr>
                        <td><b>Phone Number:</b></td>
                        <td>
                            <input type="text" name="PhoneNumber" @bind="update.PhoneNumber">
                        </td>
                    </tr>

                    <tr>
                        <td><button type="submit">Save</button></td>
                        <td><a @onclick=CancelForm>Cancel</a></td>
                    </tr>
                </tbody>
            </table>
        </form>
        break;

        default:
            <tr>
                <td>Not data found</td>
            </tr>
        break;
    }
}
else
{
    <tr>
        <td colspan="2">Loading...</td>
    </tr>
}

@code
{
    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public string AntiForgery { get; set; } = string.Empty; 
    [Parameter]
    public FormMode Mode { get; set; }

    private ResponseEmployee.Get? employee;

    private RequestEmployee.Update update = new RequestEmployee.Update();

    protected override async Task OnInitializedAsync()
    {
        employee = await http.GetFromJsonAsync<ResponseEmployee.Get>($"{nav.BaseUri.TrimEnd('/')}{Endpoints.Employees.GetMainDetails.Replace("{id}", Id.ToString())}") ?? null!;
    }

    private void EditForm()
    {
        Mode = FormMode.Update;
    }

    private void CancelForm()
    {
        Mode = FormMode.View;
    }
}
